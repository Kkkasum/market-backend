"""empty message

Revision ID: d5f6ff3fb104
Revises: 
Create Date: 2024-10-17 13:01:45.875612

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd5f6ff3fb104'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('commissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('DEPOSIT', 'WITHDRAWAL', 'SWAP', 'BUY', 'SELL', name='commissiontype'), nullable=False),
    sa.Column('value', sa.Float(), server_default=sa.text('0'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('numbers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=11), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address'),
    sa.UniqueConstraint('number')
    )
    op.create_table('usernames',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address'),
    sa.UniqueConstraint('username')
    )
    op.create_table('users',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'BLOCKED', name='userstatus'), nullable=False),
    sa.Column('ton_balance', sa.Float(), server_default=sa.text('0'), nullable=False),
    sa.Column('usdt_balance', sa.Float(), server_default=sa.text('0'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_deposits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('token', sa.Enum('TON', 'USDT_TON', 'USDT_TRC', name='transactiontoken'), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_numbers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('number_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['number_id'], ['numbers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_swaps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('from_token', sa.Enum('TON', 'USDT', name='swaptoken'), nullable=False),
    sa.Column('from_amount', sa.Float(), nullable=False),
    sa.Column('to_token', sa.Enum('TON', 'USDT', name='swaptoken'), nullable=False),
    sa.Column('to_amount', sa.Float(), nullable=False),
    sa.Column('volume', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_usernames',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('username_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['username_id'], ['usernames.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_withdrawals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('token', sa.Enum('TON', 'USDT_TON', 'USDT_TRC', name='transactiontoken'), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('market_numbers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_number_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_number_id'], ['users_numbers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('market_usernames',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_username_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_username_id'], ['users_usernames.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('market_usernames')
    op.drop_table('market_numbers')
    op.drop_table('users_withdrawals')
    op.drop_table('users_usernames')
    op.drop_table('users_swaps')
    op.drop_table('users_numbers')
    op.drop_table('users_deposits')
    op.drop_table('users')
    op.drop_table('usernames')
    op.drop_table('numbers')
    op.drop_table('commissions')
    # ### end Alembic commands ###
